<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Component Based Object Management in Python</title>
<link rel="stylesheet" href="https://stackedit.io/res-min/themes/base.css" />
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML"></script>
</head>
<body><div class="container"><h1 id="component-object-system-in-python">Component Object System in Python</h1>

<blockquote>
  <p><strong>Abstract</strong> <br>
  I’m trying to design a Component Object System in Python, called <em>pycos</em>.</p>
</blockquote>



<h2 id="table-of-contents">Table of Contents</h2>

<p><div class="toc">
<ul>
<li><a href="#component-object-system-in-python">Component Object System in Python</a><ul>
<li><a href="#table-of-contents">Table of Contents</a></li>
<li><a href="#object-database">Object Database</a><ul>
<li><a href="#entity-is-id">Entity is ID</a></li>
<li><a href="#component-design-issues">Component Design Issues</a></li>
</ul>
</li>
<li><a href="#data-driven-object-creation">Data Driven Object Creation</a></li>
<li><a href="#message-passing-among-components">Message Passing Among Components</a></li>
<li><a href="#frame-update">Frame Update</a></li>
<li><a href="#case-study">Case Study</a><ul>
<li><a href="#game-1-bacteria-walk">Game 1: Bacteria Walk</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</p>



<h2 id="object-database">Object Database</h2>



<h3 id="entity-is-id">Entity is ID</h3>



<h3 id="component-design-issues">Component Design Issues</h3>

<p>Each component is separated into two parts: the <strong>state</strong> part and the <strong>logic</strong> part. </p>

<p>The <strong>state</strong> part contains pure data that is efficient to serialize/deserialize a component. </p>

<p>The <strong>logic</strong> part contains pure operations that modifies the component state.</p>

<p><code>Component = State + Logic</code> <br>
<code>Program = DataStructure + Algorithm</code></p>



<h2 id="data-driven-object-creation">Data Driven Object Creation</h2>



<h2 id="message-passing-among-components">Message Passing Among Components</h2>



<h2 id="frame-update">Frame Update</h2>



<h2 id="case-study">Case Study</h2>



<h3 id="game-1-bacteria-walk">Game 1: Bacteria Walk</h3>

<p>Imagine that there are many bacteria in a rectangular plate. The plate has a dimension of <code>plate_width</code> x <code>plate_length</code>, with its center position in <code>plate_pos</code>. At time <code>tick = 0</code>, <code>num_bacteria</code> bacteria are generated with random initial positions. Each bacteria has a<code>pos</code>, <code>velocity</code>, and <code>speed</code>. At each frame, a bacteria moves <code>velocity * speed</code>.</p>

<p>The data model is quite simple in this game, in each frame update, modify each bacteria’s position to: <br>
<code>pos += velocity * speed</code></p>

<p><strong>Components</strong></p>

<p>PositionComp: pos(vec3)</p>

<pre><code>#handle MsgDeltaPos
def delta_pos(self, delta):
    self.pos += delta
</code></pre>

<p>MovementComp: velocity(vec3), speed(float)</p>

<p>DisplayComp: model(model)</p>

<pre><code>#handle MsgDeltaPos
def delta_pos(self, delta):
    if delta != (0, 0, 0):
        self.dirty = True   
</code></pre>

<p><strong>Systems</strong></p>

<p>MovementSystem: add velocity to PositionComp</p>

<pre><code>for mc in all movementComps:
    entity_id = mc.entity_id
    delta_pos = mc.velocity * mc.speed
    post_message(entity_id, MsgDeltaPos, delta_pos)
</code></pre>

<p>DisplaySystem: transport PositionComp to DisplayComp</p>

<pre><code>for dc in all displayComps:
    if not self.dirty:
        continue

    entity_id = dc.entity_id
    pos = get_comp_by_entity(entity_id, PositionComp).pos
    dc.model.position = pos
    self.dirty = False
</code></pre>

<p>Note that we use a dirty flag in <code>DisplayComp</code> to remove unnecessary updates of model’s position. The data flow model of <em>Bacteria Walk</em> is shown as follows:</p>



<div class="flow-chart"><svg height="219" version="1.1" width="116" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="overflow: hidden; position: relative; top: -0.078125px;"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with Raphaël 2.1.2</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><marker id="raphael-marker-endblock33-obj6" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj7" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker></defs><rect x="0" y="0" width="110" height="35" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="2" class="flowchart" id="move" transform="matrix(1,0,0,1,4,4)"></rect><text x="10" y="17.5" text-anchor="start" font-family="sans-serif" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: sans-serif; font-size: 14px; font-weight: normal;" id="movet" class="flowchartt" font-weight="normal" transform="matrix(1,0,0,1,4,4)"><tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">MovementComp</tspan><tspan dy="18" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><rect x="0" y="0" width="110" height="35" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="2" class="flowchart" id="pos" transform="matrix(1,0,0,1,4,93)"></rect><text x="10" y="17.5" text-anchor="start" font-family="sans-serif" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: sans-serif; font-size: 14px; font-weight: normal;" id="post" class="flowchartt" font-weight="normal" transform="matrix(1,0,0,1,4,93)"><tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">PositionComp</tspan></text><rect x="0" y="0" width="102.5" height="35" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="2" class="flowchart" id="dis" transform="matrix(1,0,0,1,7.75,182)"></rect><text x="10" y="17.5" text-anchor="start" font-family="sans-serif" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: sans-serif; font-size: 14px; font-weight: normal;" id="dist" class="flowchartt" font-weight="normal" transform="matrix(1,0,0,1,7.75,182)"><tspan dy="5.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">DisplayComp</tspan></text><path fill="none" stroke="#000000" d="M59,39C59,39,59,78.65409994125366,59,90.00043908460066" stroke-width="2" marker-end="url(#raphael-marker-endblock33-obj6)" font-family="sans-serif" font-weight="normal" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); font-family: sans-serif; font-weight: normal;"></path><path fill="none" stroke="#000000" d="M59,128C59,128,59,167.65409994125366,59,179.00043908460066" stroke-width="2" marker-end="url(#raphael-marker-endblock33-obj7)" font-family="sans-serif" font-weight="normal" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); font-family: sans-serif; font-weight: normal;"></path></svg></div></div></body>
</html>